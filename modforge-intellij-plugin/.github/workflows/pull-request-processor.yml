name: Pull Request Processor

on:
  pull_request:
    types: [opened, synchronize, reopened, edited, labeled]

jobs:
  process-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.ref }}
        fetch-depth: 0
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Set up Python for automation
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Configure Git
      run: |
        git config --global user.name "ModForge Automation"
        git config --global user.email "automation@modforge.dev"
    
    - name: Install AI development dependencies
      run: |
        pip install openai
        pip install requests
        pip install pyyaml
    
    - name: Analyze Pull Request
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PR_TITLE: ${{ github.event.pull_request.title }}
        PR_BODY: ${{ github.event.pull_request.body }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
      run: |
        python .github/scripts/process_pull_request.py
    
    - name: Commit improvements if any
      run: |
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Autonomous PR improvements [ModForge AI]"
          git push
        fi
    
    - name: Comment on PR
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          if (fs.existsSync('pr_response.txt')) {
            const response = fs.readFileSync('pr_response.txt', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: response
            });
          }