plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '1.15.0'
}

group 'com.modforge'
version '1.0.0'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'org.apache.commons:commons-lang3:3.13.0'
    implementation 'org.apache.httpcomponents:httpclient:4.5.14'
    implementation 'commons-io:commons-io:2.13.0'
    implementation 'org.commonmark:commonmark:0.21.0'  // For Markdown processing
    
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testImplementation 'org.mockito:mockito-core:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
}

// Configure Gradle IntelliJ Plugin
// Read more: https://plugins.jetbrains.com/docs/intellij/tools-gradle-intellij-plugin.html
intellij {
    version = '2023.3'  // Updated to latest stable version
    type = 'IC' // Target IDE Platform: IntelliJ IDEA Community Edition
    plugins = ['com.intellij.java', 'Git4Idea']  // Added Git integration plugin
}

tasks {
    // Set the JVM compatibility versions
    withType(JavaCompile) {
        sourceCompatibility = '17'
        targetCompatibility = '17'
        options.encoding = 'UTF-8'
    }
    
    // Add a clean build task
    clean {
        doFirst {
            logger.info("Cleaning output directories")
        }
    }
    
    // Configure build task
    build {
        dependsOn(clean)
        doLast {
            logger.info("ModForge IntelliJ plugin built successfully")
        }
    }

    patchPluginXml {
        sinceBuild = '232'
        untilBuild = '241.*'  // Ensure compatibility with latest 2024.1 releases
        
        // Plugin vendor information
        pluginDescription = """
            <p>ModForge AI - Smart Minecraft Mod Development</p>
            <p>This plugin provides AI-powered assistance for Minecraft mod development:</p>
            <ul>
                <li>Multi-mod loader support (Forge, Fabric, Quilt, Architectury)</li>
                <li>AI-driven code generation</li>
                <li>Automatic error detection and fixing</li>
                <li>Pattern recognition to reduce API costs</li>
                <li>Continuous development for 24/7 improvement</li>
            </ul>
        """
        
        changeNotes = """
            <ul>
                <li><b>1.0.0</b>
                    <ul>
                        <li>Initial release</li>
                        <li>AI-powered code generation</li>
                        <li>Automatic error detection and fixing</li>
                        <li>Pattern recognition for cost optimization</li>
                        <li>Continuous development features</li>
                        <li>GitHub integration</li>
                        <li>Multi-mod loader support</li>
                    </ul>
                </li>
            </ul>
        """
    }
    
    signPlugin {
        certificateChain = System.getenv('CERTIFICATE_CHAIN')
        privateKey = System.getenv('PRIVATE_KEY')
        password = System.getenv('PRIVATE_KEY_PASSWORD')
    }
    
    publishPlugin {
        token = System.getenv('PUBLISH_TOKEN')
    }
    
    test {
        useJUnitPlatform()
    }
}